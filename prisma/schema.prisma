generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Board {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  orgId         String  @unique
  title         String
  imageId       String
  imageThumbUrl String? @map("imageThumbUrl")
  imageFullUrl  String? @map("imageFullUrl")
  imageLinkHtml String? @map("imageLinkHtml")

  lists List[]

  createdAt          DateTime @default(now())
  updatedAtTimestamp DateTime @updatedAt
}

model List {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  order Int

  boardId String @db.ObjectId
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards Card[]

  createdAt          DateTime @default(now())
  updatedAtTimestamp DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  order       Int
  description String?

  listId String @db.ObjectId
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  createdAt          DateTime @default(now())
  updatedAtTimestamp DateTime @updatedAt

  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  orgId       String
  action      ACTION      @default(CREATE)
  entityId    String
  entityType  ENTITY_TYPE @default(BOARD)
  entityTitle String
  userId      String
  userImage   String?     @map("userImage")
  userName    String?     @map("userName")

  createdAt          DateTime @default(now())
  updatedAtTimestamp DateTime @updatedAt
}

model OrgLimit {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  orgId String @unique
  count Int    @default(0)

  createdAt          DateTime @default(now())
  updatedAtTimestamp DateTime @updatedAt
}

model OrgSubscription {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  orgId                  String    @unique
  stripeCustomerId       String?   @unique @map("stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map("stripe_subscription_id")
  stripePriceId          String?   @map("stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map("stripe_current_period_end")

  createdAt          DateTime @default(now())
  updatedAtTimestamp DateTime @updatedAt
}
